{"version":3,"file":"static/js/792.9d6f1030.chunk.js","mappings":"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","sources":["components/AdditionalInfo/AdditionalInfo.styled.js","movies-api/movies.js","components/AdditionalInfo/AdditionalInfo.jsx","components/Section/Section.jsx","pages/MovieDetails.jsx","pages/Pages.styled.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-block;\n  padding: 4px 8px;\n\n  color: black;\n  background-color: #ecf1f4;\n  font-size: 24px;\n  text-decoration: none;\n\n  border-radius: 5px;\n  &:hover,\n  &:focus {\n    background-color: grey;\n    color: #fff;\n  }\n`;\n\nexport const StyledAdditionalInfo = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin: 20px 0;\n`;\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n`;\nexport const StyledAuthorText = styled.p`\n  font-weight: 700;\n`;\n","import axios from 'axios';\n\nconst options = { method: 'GET', headers: { accept: 'application/json' } };\nexport function getDate() {\n  return axios(\n    'https://api.themoviedb.org/3/trending/all/day?api_key=819f545c7c1ea540af1ea0cb7410f83a',\n    options\n  );\n}\n\nexport function movieDetailsApi(id) {\n  return axios(\n    `https://api.themoviedb.org/3/movie/${id}?language=en-US&api_key=819f545c7c1ea540af1ea0cb7410f83a`,\n    options\n  );\n}\n\nexport function searchMovie(query) {\n  return axios(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=819f545c7c1ea540af1ea0cb7410f83a`,\n    options\n  );\n}\nexport function getActors(movieId) {\n  return axios(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US&api_key=819f545c7c1ea540af1ea0cb7410f83a`,\n    options\n  );\n}\n\nexport function getReviews(movieId) {\n  return axios(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1&api_key=819f545c7c1ea540af1ea0cb7410f83a`,\n    options\n  );\n}\n","import { StyledLink, StyledAdditionalInfo } from './AdditionalInfo.styled';\nexport const AdditionalInfo = () => {\n  return (\n    <StyledAdditionalInfo>\n      <li>\n        <StyledLink to=\"Actors\">Actors</StyledLink>\n      </li>\n      <li>\n        <StyledLink to=\"Reviews\">Reviews</StyledLink>\n      </li>\n    </StyledAdditionalInfo>\n  );\n};\n","export const Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n","import { movieDetailsApi } from '../movies-api/movies';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { MovieDetailsWrap, MovieInfo, StyledLink } from './Pages.styled';\n\nimport { AdditionalInfo } from 'components/AdditionalInfo/AdditionalInfo';\nimport { Section } from 'components/Section/Section';\n\nconst MovieDetails = () => {\n  const [data, setData] = useState({});\n  const [error, setError] = useState('');\n  const { id } = useParams();\n  const location = useLocation();\n  const goBack = useRef(location.state?.from ?? '/');\n  const basePath = 'https://image.tmdb.org/t/p/w400';\n\n  useEffect(() => {\n    movieDetailsApi(id)\n      .then(({ data }) => setData(data))\n      .catch(err => setError(err.message));\n  }, [id]);\n\n  return (\n    <>\n      <StyledLink to={goBack.current}>{'<- Go Back'}</StyledLink>\n      {Object.keys(data).length !== 0 ? (\n        <Section title=\"\">\n          <MovieDetailsWrap>\n            <img src={basePath + data.poster_path} alt={data.original_title} />\n            <MovieInfo>\n              <li>\n                <h2>{data.original_title}</h2>\n              </li>\n              <li>\n                <p style={{ fontWeight: 700 }}>\n                  popularity:\n                  <span style={{ fontWeight: 500 }}>{data.popularity}</span>\n                </p>\n              </li>\n              <li>\n                <p style={{ fontWeight: 700 }}>\n                  overview :\n                  <span style={{ fontWeight: 500 }}>{data.overview}</span>\n                </p>\n              </li>\n              <li>\n                <p style={{ fontWeight: 700 }}>\n                  genres :\n                  <span style={{ fontWeight: 500 }}>\n                    {Array.isArray(data.genres) && data.genres.length > 0\n                      ? data.genres.map(({ name }) => name).join(', ')\n                      : 'no genre info'}\n                  </span>\n                </p>\n              </li>\n            </MovieInfo>\n          </MovieDetailsWrap>\n          <AdditionalInfo />\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </Section>\n      ) : (\n        <h2>{error}</h2>\n      )}\n    </>\n  );\n};\nexport default MovieDetails;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieDetailsWrap = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const MovieInfo = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: inline-block;\n  padding: 4px 8px;\n  margin-bottom: 10px;\n  color: black;\n  background-color: #ecf1f4;\n  font-size: 24px;\n  text-decoration: none;\n\n  border-radius: 5px;\n  &:hover,\n  &:focus {\n    background-color: grey;\n    color: #fff;\n  }\n`;\nexport const ErrorWrap = styled.div`\n  text-align: center;\n`;\nexport const StatusCode = styled.p`\n  font-size: 120px;\n  font-weight: 700;\n`;\n\nexport const DescriptionError = styled.p`\n  font-size: 36px;\n`;\n\nexport const ErrorHomeLink = styled(Link)`\n  display: inline-block;\n  padding: 4px 8px;\n  margin-top: 10px;\n\n  color: black;\n  background-color: #ecf1f4;\n  font-size: 24px;\n  text-decoration: none;\n\n  border-radius: 5px;\n  &:hover,\n  &:focus {\n    background-color: grey;\n    color: #fff;\n  }\n`;\n"],"names":["StyledLink","styled","Link","StyledAdditionalInfo","StyledList","StyledAuthorText","options","method","headers","accept","getDate","axios","movieDetailsApi","id","searchMovie","query","getActors","movieId","getReviews","AdditionalInfo","to","Section","title","children","useState","data","setData","error","setError","useParams","location","useLocation","goBack","useRef","state","from","useEffect","then","catch","err","message","current","Object","keys","length","src","poster_path","alt","original_title","style","fontWeight","popularity","overview","Array","isArray","genres","map","name","join","Suspense","fallback","MovieDetailsWrap","MovieInfo","ErrorWrap","StatusCode","DescriptionError","ErrorHomeLink"],"sourceRoot":""}