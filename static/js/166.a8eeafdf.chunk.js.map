{"version":3,"file":"static/js/166.a8eeafdf.chunk.js","mappings":"8MAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,0I,SCAVE,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAMG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACT,yBACE,SAACV,EAAD,CAAYW,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAAhD,SACGI,GAAgBC,KAFZF,EADA,KAShB,C,oKCfKM,EAAU,CAAEC,OAAQ,MAAOC,QAAS,CAAEC,OAAQ,qBAC7C,SAASC,IACd,OAAOC,EAAAA,EAAAA,GACL,yFACAL,EAEH,CAEM,SAASM,EAAgBZ,GAC9B,OAAOW,EAAAA,EAAAA,GAAM,sCAAD,OAC4BX,EAD5B,4DAEVM,EAEH,CAEM,SAASO,EAAYC,GAC1B,OAAOH,EAAAA,EAAAA,GAAM,mDAAD,OACyCG,EADzC,6CAEVR,EAEH,CACM,SAASS,EAAUC,GACxB,OAAOL,EAAAA,EAAAA,GAAM,sCAAD,OAC4BK,EAD5B,oEAEVV,EAEH,CAEM,SAASW,EAAWD,GACzB,OAAOL,EAAAA,EAAAA,GAAM,sCAAD,OAC4BK,EAD5B,2EAEVV,EAEH,C,2FCjCYY,E,OAAczB,GAAAA,MAAH,2E,SCDX0B,EAAa,SAAC,GAA8B,IAA5BL,EAA2B,EAA3BA,MAAOM,EAAoB,EAApBA,cAClC,OACE,SAACF,EAAD,CACEG,KAAK,OACLnB,KAAK,QACLoB,WAAS,EACTC,YAAY,kBACZC,MAAOV,EACPW,SAAU,YAA4B,IAAfD,EAAc,EAAxBE,OAAUF,MACrBJ,EAAcI,EACf,GAGN,E,kCCeD,EAvBc,WAAO,IAAD,EAClB,GAAkCG,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMlB,EAAK,UAAGiB,EAAaE,IAAI,gBAApB,QAAgC,IAC3CC,EAAAA,EAAAA,YAAU,WACM,KAAVpB,GAIJD,EAAAA,EAAAA,IAAYC,GAAOqB,MAAK,gBAAWC,EAAX,EAAGC,KAAQD,QAAX,OAA2BP,EAAaO,EAAxC,IAHtBJ,EAAgB,CAAC,EAIpB,GAAE,CAAClB,EAAOkB,IAMX,OACE,iCACE,SAACb,EAAD,CAAYL,MAAOA,EAAOM,cANR,SAAAN,GACpBkB,EAAgB,CAAElB,MAAOA,GAC1B,KAKG,SAACnB,EAAA,EAAD,CAAWC,MAAOgC,MAGvB,C","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","movies-api/movies.js","components/MovieInput/MovieInput.styled.js","components/MovieInput/MovieInput.jsx","pages/Movie.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  font-size: 18px;\n  color: grey;\n\n  &:hover,\n  &:focus {\n    color: tomato;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { StyledLink } from './MovieList.styled';\n\nexport const MovieList = ({ items }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {items.map(({ id, title, name }) => (\n        <li key={id}>\n          <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n            {title ? title : name}\n          </StyledLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import axios from 'axios';\n\nconst options = { method: 'GET', headers: { accept: 'application/json' } };\nexport function getDate() {\n  return axios(\n    'https://api.themoviedb.org/3/trending/all/day?api_key=819f545c7c1ea540af1ea0cb7410f83a',\n    options\n  );\n}\n\nexport function movieDetailsApi(id) {\n  return axios(\n    `https://api.themoviedb.org/3/movie/${id}?language=en-US&api_key=819f545c7c1ea540af1ea0cb7410f83a`,\n    options\n  );\n}\n\nexport function searchMovie(query) {\n  return axios(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=819f545c7c1ea540af1ea0cb7410f83a`,\n    options\n  );\n}\nexport function getActors(movieId) {\n  return axios(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US&api_key=819f545c7c1ea540af1ea0cb7410f83a`,\n    options\n  );\n}\n\nexport function getReviews(movieId) {\n  return axios(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1&api_key=819f545c7c1ea540af1ea0cb7410f83a`,\n    options\n  );\n}\n","import styled from 'styled-components';\n\nexport const StyledInput = styled.input`\n  padding: 4px;\n  width: 280px;\n  height: 20px;\n`;\n","import { StyledInput } from './MovieInput.styled';\nexport const MovieInput = ({ query, handlerChange }) => {\n  return (\n    <StyledInput\n      type=\"text\"\n      name=\"query\"\n      autoFocus\n      placeholder=\"Search movie...\"\n      value={query}\n      onChange={({ target: { value } }) => {\n        handlerChange(value);\n      }}\n    />\n  );\n};\n","import { MovieInput } from 'components/MovieInput/MovieInput';\nimport { useEffect, useState } from 'react';\nimport { searchMovie } from 'movies-api/movies';\nimport { useSearchParams } from 'react-router-dom';\nimport { MovieList } from 'components/MovieList/MovieList';\n\nconst Movie = () => {\n  const [movieData, setMovieData] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  useEffect(() => {\n    if (query === '') {\n      setSearchParams({});\n      return;\n    }\n    searchMovie(query).then(({ data: { results } }) => setMovieData(results));\n  }, [query, setSearchParams]);\n\n  const handlerChange = query => {\n    setSearchParams({ query: query });\n  };\n\n  return (\n    <>\n      <MovieInput query={query} handlerChange={handlerChange} />\n      <MovieList items={movieData} />\n    </>\n  );\n};\nexport default Movie;\n"],"names":["StyledLink","styled","Link","MovieList","items","location","useLocation","map","id","title","name","to","state","from","options","method","headers","accept","getDate","axios","movieDetailsApi","searchMovie","query","getActors","movieId","getReviews","StyledInput","MovieInput","handlerChange","type","autoFocus","placeholder","value","onChange","target","useState","movieData","setMovieData","useSearchParams","searchParams","setSearchParams","get","useEffect","then","results","data"],"sourceRoot":""}